@model BusinessAccessLayer.RentalModel

@{
    ViewBag.Title = "Rent your Equipment";
}
<script src="~/Scripts/jquery-ui-1.11.4.js"></script>
<link href="~/Content/themes/base/all.css" rel="stylesheet" />

<script type="text/javascript">

    $(document).ready(function () {
        $("#EquipmentTypeOption").addClass("CustomDropDown");

        $("#EquipmentTypeOption").on("change", function () {
            $("#hdnEquipmentTypeSelected").val($("#EquipmentTypeOption").val());
        });

        $(".datefieldfuture").datepicker({
            dateFormat: "dd/mm/yy",
            changeMonth: true,
            changeYear: true,
            duration: "slow",
            minDate: 'today',
            yearRange: "-0:+60"
        });
    });

    function ValidateEquipmentDropDown() {
        var equipmentTypeVal = $("#hdnEquipmentTypeSelected").val();
        if (equipmentTypeVal != undefined && equipmentTypeVal == "") {
            alert("please select Equipment Type.");
            return false;
        }
        else {
            return true;
        }
    }

</script>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <h2>Rent your Equipment</h2>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-2">
                    <div class="col-md-11 control-label">
                        @Html.LabelFor(model => model.EquipmentType, new { @class = "" })
                    </div>
                    <div style="text-align:center;color:red;font-size:15pt;" class="control-label">
                        *
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.DropDownList("EquipmentTypeOption", "-- Select --")
                    @Html.HiddenFor(m => m.EquipmentType, new { @id = "hdnEquipmentTypeSelected" })
                    @Html.ValidationMessageFor(model => model.EquipmentType)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <div class="col-md-11 control-label">
                        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "" })
                    </div>
                    <div style="text-align:center;color:red;font-size:15pt;" class="control-label">
                        *
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control datefieldfuture" } })
                    @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <div class="col-md-11 control-label">
                        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "" })
                    </div>
                    <div style="text-align:center;color:red;font-size:15pt;" class="control-label">
                        *
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control datefieldfuture" } })
                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <div class="col-md-11 control-label">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "" })
                    </div>
                    <div style="text-align:center;color:red;font-size:15pt;" class="control-label">
                        *
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <div class="col-md-11 control-label">
                        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "" })
                    </div>
                    <div style="text-align:center;color:red;font-size:15pt;" class="control-label">
                        *
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    <input type="submit" value="Post As Guest" class="btn btn-primary" onclick="return ValidateEquipmentDropDown();" />
                </div>
            </div>
        </div>
        
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
